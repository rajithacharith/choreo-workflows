import ballerina/grpc;
import ballerina/protobuf;
import ballerina/time;

public const string

public isolated client class UserServiceClient {
    *grpc:AbstractClientEndpoint;

    private final grpc:Client grpcClient;

    public isolated function init(string url, *grpc:ClientConfiguration config) returns grpc:Error? {
        self.grpcClient = check new (url, config);
        check self.grpcClient.initStub(self, USER_SERVICE_DESC);
    }

    isolated remote function FindUsersByOrganizationByRole(FindUsersByOrganizationByRoleRequest|ContextFindUsersByOrganizationByRoleRequest req) returns FindUsersByOrganizationByRoleResponse|grpc:Error {
        map<string|string[]> headers = {};
        FindUsersByOrganizationByRoleRequest message;
        if req is ContextFindUsersByOrganizationByRoleRequest {
            message = req.content;
            headers = req.headers;
        } else {
            message = req;
        }
        var payload = check self.grpcClient->executeSimpleRPC("choreo.apis.UserService/FindUsersByOrganizationByRole", message, headers);
        [anydata, map<string|string[]>] [result, _] = payload;
        return <FindUsersByOrganizationByRoleResponse>result;
    }

    isolated remote function FindUsersByOrganizationByRoleContext(FindUsersByOrganizationByRoleRequest|ContextFindUsersByOrganizationByRoleRequest req) returns ContextFindUsersByOrganizationByRoleResponse|grpc:Error {
        map<string|string[]> headers = {};
        FindUsersByOrganizationByRoleRequest message;
        if req is ContextFindUsersByOrganizationByRoleRequest {
            message = req.content;
            headers = req.headers;
        } else {
            message = req;
        }
        var payload = check self.grpcClient->executeSimpleRPC("choreo.apis.UserService/FindUsersByOrganizationByRole", message, headers);
        [anydata, map<string|string[]>] [result, respHeaders] = payload;
        return {content: <FindUsersByOrganizationByRoleResponse>result, headers: respHeaders};
    }

    isolated remote function GetUserRolesFromAuthzService(GetUserRolesFromAuthzServiceRequest|ContextGetUserRolesFromAuthzServiceRequest req) returns GetUserRolesFromAuthzServiceResponse|grpc:Error {
        map<string|string[]> headers = {};
        GetUserRolesFromAuthzServiceRequest message;
        if req is ContextGetUserRolesFromAuthzServiceRequest {
            message = req.content;
            headers = req.headers;
        } else {
            message = req;
        }
        var payload = check self.grpcClient->executeSimpleRPC("choreo.apis.UserService/GetUserRolesFromAuthzService", message, headers);
        [anydata, map<string|string[]>] [result, _] = payload;
        return <GetUserRolesFromAuthzServiceResponse>result;
    }

    isolated remote function GetUserRolesFromAuthzServiceContext(GetUserRolesFromAuthzServiceRequest|ContextGetUserRolesFromAuthzServiceRequest req) returns ContextGetUserRolesFromAuthzServiceResponse|grpc:Error {
        map<string|string[]> headers = {};
        GetUserRolesFromAuthzServiceRequest message;
        if req is ContextGetUserRolesFromAuthzServiceRequest {
            message = req.content;
            headers = req.headers;
        } else {
            message = req;
        }
        var payload = check self.grpcClient->executeSimpleRPC("choreo.apis.UserService/GetUserRolesFromAuthzService", message, headers);
        [anydata, map<string|string[]>] [result, respHeaders] = payload;
        return {content: <GetUserRolesFromAuthzServiceResponse>result, headers: respHeaders};
    }
}

public isolated client class UserServiceFindUsersByOrganizationByRoleResponseCaller {
    private final grpc:Caller caller;

    public isolated function init(grpc:Caller caller) {
        self.caller = caller;
    }

    public isolated function getId() returns int {
        return self.caller.getId();
    }

    isolated remote function sendFindUsersByOrganizationByRoleResponse(FindUsersByOrganizationByRoleResponse response) returns grpc:Error? {
        return self.caller->send(response);
    }

    isolated remote function sendContextFindUsersByOrganizationByRoleResponse(ContextFindUsersByOrganizationByRoleResponse response) returns grpc:Error? {
        return self.caller->send(response);
    }

    isolated remote function sendError(grpc:Error response) returns grpc:Error? {
        return self.caller->sendError(response);
    }

    isolated remote function complete() returns grpc:Error? {
        return self.caller->complete();
    }

    public isolated function isCancelled() returns boolean {
        return self.caller.isCancelled();
    }
}

public isolated client class UserServiceGetUserRolesFromAuthzServiceResponseCaller {
    private final grpc:Caller caller;

    public isolated function init(grpc:Caller caller) {
        self.caller = caller;
    }

    public isolated function getId() returns int {
        return self.caller.getId();
    }

    isolated remote function sendGetUserRolesFromAuthzServiceResponse(GetUserRolesFromAuthzServiceResponse response) returns grpc:Error? {
        return self.caller->send(response);
    }

    isolated remote function sendContextGetUserRolesFromAuthzServiceResponse(ContextGetUserRolesFromAuthzServiceResponse response) returns grpc:Error? {
        return self.caller->send(response);
    }

    isolated remote function sendError(grpc:Error response) returns grpc:Error? {
        return self.caller->sendError(response);
    }

    isolated remote function complete() returns grpc:Error? {
        return self.caller->complete();
    }

    public isolated function isCancelled() returns boolean {
        return self.caller.isCancelled();
    }
}

public type ContextFindUsersByOrganizationByRoleResponse record {|
    FindUsersByOrganizationByRoleResponse content;
    map<string|string[]> headers;
|};

public type ContextFindUsersByOrganizationByRoleRequest record {|
    FindUsersByOrganizationByRoleRequest content;
    map<string|string[]> headers;
|};

public type ContextGetUserRolesFromAuthzServiceRequest record {|
    GetUserRolesFromAuthzServiceRequest content;
    map<string|string[]> headers;
|};

public type ContextGetUserRolesFromAuthzServiceResponse record {|
    GetUserRolesFromAuthzServiceResponse content;
    map<string|string[]> headers;
|};

@protobuf:Descriptor {value: USER_SERVICE_DESC}
public type Group record {|
    int id = 0;
    string org_name = "";
    string org_uuid = "";
    string description = "";
    boolean default_group = false;
    string display_name = "";
    string 'handle = "";
    Role[] roles = [];
    User[] users = [];
    GroupTag[] tags = [];
    string created_by = "";
    string updated_by = "";
    time:Utc created_at = [0, 0.0d];
    time:Utc updated_at = [0, 0.0d];
    string uuid = "";
    int assignedRoleCount = 0;
    RolesToGroupMapping rolesToGroupMapping = {};
|};

@protobuf:Descriptor {value: USER_SERVICE_DESC}
public type FindUsersByOrganizationByRoleResponse record {|
    PaginatedUser paginatedUser = {};
|};

@protobuf:Descriptor {value: USER_SERVICE_DESC}
public type User record {|
    int id = 0;
    string idp_id = "";
    string picture_url = "";
    string email = "";
    string display_name = "";
    Group[] groups = [];
    Role[] roles = [];
    boolean is_enterprise = false;
    time:Utc created_at = [0, 0.0d];
    time:Utc expired_at = [0, 0.0d];
|};

@protobuf:Descriptor {value: USER_SERVICE_DESC}
public type FindUsersByOrganizationByRoleRequest record {|
    string organization_name = "";
    string[] excluding_roles = [];
    string offset = "";
    string 'limit = "";
    string search = "";
    string[] includes = [];
|};

@protobuf:Descriptor {value: USER_SERVICE_DESC}
public type GetUserRolesFromAuthzServiceRequest record {|
    string userIdpId = "";
    string orgHandle = "";
    string[] enterpriseGroups = [];
|};

@protobuf:Descriptor {value: USER_SERVICE_DESC}
public type GroupsToRoleMapping record {|
    string orgUUID = "";
    string roleUUID = "";
    GroupAssoc[] groupAssociations = [];
|};

@protobuf:Descriptor {value: USER_SERVICE_DESC}
public type GroupAssoc record {|
    string groupHandle = "";
    string groupUUID = "";
    string groupDisplayName = "";
    MappingLevel mappingLevel = ORG;
    string mappedResourceUUID = "";
|};

@protobuf:Descriptor {value: USER_SERVICE_DESC}
public type PaginatedUser record {|
    int count = 0;
    User[] list = [];
    Pagination pagination = {};
|};

@protobuf:Descriptor {value: USER_SERVICE_DESC}
public type RoleAssoc record {|
    string roleHandle = "";
    string roleUUID = "";
    string roleDisplayName = "";
    MappingLevel mappingLevel = ORG;
    string mappedResourceUUID = "";
|};

@protobuf:Descriptor {value: USER_SERVICE_DESC}
public type RoleTag record {|
    int id = 0;
    string role_handle = "";
    string 'handle = "";
    string created_by = "";
    time:Utc created_at = [0, 0.0d];
    time:Utc updated_at = [0, 0.0d];
|};

@protobuf:Descriptor {value: USER_SERVICE_DESC}
public type Role record {|
    int id = 0;
    string description = "";
    string display_name = "";
    string 'handle = "";
    boolean default_role = false;
    Permission[] permissions = [];
    RoleTag[] tags = [];
    User[] users = [];
    string created_by = "";
    string updated_by = "";
    time:Utc created_at = [0, 0.0d];
    time:Utc updated_at = [0, 0.0d];
    string uuid = "";
    GroupsToRoleMapping groupsToRoleMapping = {};
    int assignedGroupCount = 0;
|};

@protobuf:Descriptor {value: USER_SERVICE_DESC}
public type Pagination record {|
    int offset = 0;
    int 'limit = 0;
    int total = 0;
    string previous = "";
    string next = "";
|};

@protobuf:Descriptor {value: USER_SERVICE_DESC}
public type GroupTag record {|
    int id = 0;
    string org_name = "";
    string org_uuid = "";
    string group_name = "";
    string 'handle = "";
    string created_by = "";
    time:Utc created_at = [0, 0.0d];
    time:Utc updated_at = [0, 0.0d];
|};

@protobuf:Descriptor {value: USER_SERVICE_DESC}
public type RolesToGroupMapping record {|
    string orgUUID = "";
    string groupUUID = "";
    RoleAssoc[] roleAssociations = [];
|};

@protobuf:Descriptor {value: USER_SERVICE_DESC}
public type GetUserRolesFromAuthzServiceResponse record {|
    Role[] roles = [];
|};

@protobuf:Descriptor {value: USER_SERVICE_DESC}
public type Permission record {|
    int id = 0;
    string 'handle = "";
    string display_name = "";
    string domain_area = "";
    string description = "";
    int parent_id = 0;
    time:Utc created_at = [0, 0.0d];
    time:Utc updated_at = [0, 0.0d];
|};

public enum MappingLevel {
    ORG, PROJECT
}

